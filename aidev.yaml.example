# GPT-5 Ã— Claude Code Terminal Orchestrator Configuration
# Copy to aidev.yaml and customize for your project

# AI Model Configuration
models:
  # OpenAI model for planning and code review
  openai_model: "gpt-4o"  # Options: gpt-4o, gpt-4-turbo, gpt-3.5-turbo
  
  # Anthropic model for implementation
  anthropic_model: "claude-3-5-sonnet-20241022"
  
  # Model parameters
  openai_temperature: 0.2
  anthropic_max_tokens: 2000

# Tool Execution Configuration
tools:
  # Commands allowed for execution (safety feature)
  allowed_commands:
    # Testing frameworks
    - "pytest"
    - "python -m pytest"
    - "npm test"
    - "yarn test"
    - "cargo test"
    - "go test"
    
    # Package management
    - "pip install"
    - "npm install"
    - "yarn install"
    - "cargo build"
    - "go build"
    
    # Code quality tools
    - "ruff"
    - "black"
    - "mypy"
    - "eslint"
    - "prettier"
    - "clippy"
    
    # Build tools
    - "npm run"
    - "yarn run"
    - "poetry run"
  
  # Execution timeouts (seconds)
  default_timeout: 90
  max_timeout: 300

# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "console"  # console, json
  file: null  # Optional: path to log file

# Safety and Behavior
require_confirmation: true  # Ask before making changes
max_iterations: 50  # Maximum implementation iterations
auto_detect_tools: true  # Auto-detect project tools (npm, pip, etc.)

# Repository Settings (optional - defaults to current directory)
# target_repo: "/absolute/path/to/your/project"

# API Keys (can also be set via environment variables)
# openai_api_key: "sk-..."
# anthropic_api_key: "sk-ant-..."